/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.repositories.jooq.generated;

import edu.java.scrapper.domain.repositories.jooq.generated.tables.Chat;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.ChatLink;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.Link;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.QuestionResponse;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.RepositoryResponse;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.records.ChatLinkRecord;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.records.ChatRecord;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.records.LinkRecord;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.records.QuestionResponseRecord;
import edu.java.scrapper.domain.repositories.jooq.generated.tables.records.RepositoryResponseRecord;
import javax.annotation.processing.Generated;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> CONSTRAINT_1 =
        Internal.createUniqueKey(Chat.CHAT, DSL.name("CONSTRAINT_1"), new TableField[] {Chat.CHAT.ID}, true);
    public static final UniqueKey<ChatLinkRecord> CONSTRAINT_868 = Internal.createUniqueKey(ChatLink.CHAT_LINK,
        DSL.name("CONSTRAINT_868"),
        new TableField[] {ChatLink.CHAT_LINK.ID},
        true
    );
    public static final UniqueKey<ChatLinkRecord> UNIQUE_CHAT_LINK_PAIR = Internal.createUniqueKey(ChatLink.CHAT_LINK,
        DSL.name("UNIQUE_CHAT_LINK_PAIR"),
        new TableField[] {ChatLink.CHAT_LINK.CHAT_ID, ChatLink.CHAT_LINK.LINK_ID},
        true
    );
    public static final UniqueKey<LinkRecord> CONSTRAINT_2 =
        Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_2"), new TableField[] {Link.LINK.ID}, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_23 =
        Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_23"), new TableField[] {Link.LINK.URL}, true);
    public static final UniqueKey<QuestionResponseRecord> CONSTRAINT_D3 =
        Internal.createUniqueKey(QuestionResponse.QUESTION_RESPONSE,
            DSL.name("CONSTRAINT_D3"),
            new TableField[] {QuestionResponse.QUESTION_RESPONSE.QUESTION_ID},
            true
        );
    public static final UniqueKey<QuestionResponseRecord> CONSTRAINT_D39 =
        Internal.createUniqueKey(QuestionResponse.QUESTION_RESPONSE,
            DSL.name("CONSTRAINT_D39"),
            new TableField[] {QuestionResponse.QUESTION_RESPONSE.LINK_ID},
            true
        );
    public static final UniqueKey<RepositoryResponseRecord> CONSTRAINT_98 =
        Internal.createUniqueKey(RepositoryResponse.REPOSITORY_RESPONSE,
            DSL.name("CONSTRAINT_98"),
            new TableField[] {RepositoryResponse.REPOSITORY_RESPONSE.ID},
            true
        );
    public static final UniqueKey<RepositoryResponseRecord> CONSTRAINT_98B =
        Internal.createUniqueKey(RepositoryResponse.REPOSITORY_RESPONSE,
            DSL.name("CONSTRAINT_98B"),
            new TableField[] {RepositoryResponse.REPOSITORY_RESPONSE.LINK_ID},
            true
        );

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ChatLinkRecord, ChatRecord> CONSTRAINT_8 =
        Internal.createForeignKey(ChatLink.CHAT_LINK,
            DSL.name("CONSTRAINT_8"),
            new TableField[] {ChatLink.CHAT_LINK.CHAT_ID},
            Keys.CONSTRAINT_1,
            new TableField[] {Chat.CHAT.ID},
            true
        );
    public static final ForeignKey<ChatLinkRecord, LinkRecord> CONSTRAINT_86 =
        Internal.createForeignKey(ChatLink.CHAT_LINK,
            DSL.name("CONSTRAINT_86"),
            new TableField[] {ChatLink.CHAT_LINK.LINK_ID},
            Keys.CONSTRAINT_2,
            new TableField[] {Link.LINK.ID},
            true
        );
    public static final ForeignKey<QuestionResponseRecord, LinkRecord> CONSTRAINT_D = Internal.createForeignKey(
        QuestionResponse.QUESTION_RESPONSE,
        DSL.name("CONSTRAINT_D"),
        new TableField[] {QuestionResponse.QUESTION_RESPONSE.LINK_ID},
        Keys.CONSTRAINT_2,
        new TableField[] {Link.LINK.ID},
        true
    );
    public static final ForeignKey<RepositoryResponseRecord, LinkRecord> CONSTRAINT_9 = Internal.createForeignKey(
        RepositoryResponse.REPOSITORY_RESPONSE,
        DSL.name("CONSTRAINT_9"),
        new TableField[] {RepositoryResponse.REPOSITORY_RESPONSE.LINK_ID},
        Keys.CONSTRAINT_2,
        new TableField[] {Link.LINK.ID},
        true
    );
}
