/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.repositories.jooq.generated.tables.records;

import edu.java.scrapper.domain.repositories.jooq.generated.tables.QuestionResponse;
import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class QuestionResponseRecord extends UpdatableRecordImpl<QuestionResponseRecord>
    implements Record5<Long, Long, Boolean, Long, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>QUESTION_RESPONSE.QUESTION_ID</code>.
     */
    public void setQuestionId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>QUESTION_RESPONSE.QUESTION_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getQuestionId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>QUESTION_RESPONSE.LINK_ID</code>.
     */
    public void setLinkId(@Nullable Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>QUESTION_RESPONSE.LINK_ID</code>.
     */
    @Nullable
    public Long getLinkId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>QUESTION_RESPONSE.ANSWERED</code>.
     */
    public void setAnswered(@Nullable Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>QUESTION_RESPONSE.ANSWERED</code>.
     */
    @Nullable
    public Boolean getAnswered() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>QUESTION_RESPONSE.ANSWER_COUNT</code>.
     */
    public void setAnswerCount(@Nullable Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>QUESTION_RESPONSE.ANSWER_COUNT</code>.
     */
    @Nullable
    public Long getAnswerCount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>QUESTION_RESPONSE.LAST_ACTIVITY_DATE</code>.
     */
    public void setLastActivityDate(@NotNull OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>QUESTION_RESPONSE.LAST_ACTIVITY_DATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getLastActivityDate() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row5<Long, Long, Boolean, Long, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row5<Long, Long, Boolean, Long, OffsetDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return QuestionResponse.QUESTION_RESPONSE.QUESTION_ID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return QuestionResponse.QUESTION_RESPONSE.LINK_ID;
    }

    @Override
    @NotNull
    public Field<Boolean> field3() {
        return QuestionResponse.QUESTION_RESPONSE.ANSWERED;
    }

    @Override
    @NotNull
    public Field<Long> field4() {
        return QuestionResponse.QUESTION_RESPONSE.ANSWER_COUNT;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field5() {
        return QuestionResponse.QUESTION_RESPONSE.LAST_ACTIVITY_DATE;
    }

    @Override
    @NotNull
    public Long component1() {
        return getQuestionId();
    }

    @Override
    @Nullable
    public Long component2() {
        return getLinkId();
    }

    @Override
    @Nullable
    public Boolean component3() {
        return getAnswered();
    }

    @Override
    @Nullable
    public Long component4() {
        return getAnswerCount();
    }

    @Override
    @NotNull
    public OffsetDateTime component5() {
        return getLastActivityDate();
    }

    @Override
    @NotNull
    public Long value1() {
        return getQuestionId();
    }

    @Override
    @Nullable
    public Long value2() {
        return getLinkId();
    }

    @Override
    @Nullable
    public Boolean value3() {
        return getAnswered();
    }

    @Override
    @Nullable
    public Long value4() {
        return getAnswerCount();
    }

    @Override
    @NotNull
    public OffsetDateTime value5() {
        return getLastActivityDate();
    }

    @Override
    @NotNull
    public QuestionResponseRecord value1(@NotNull Long value) {
        setQuestionId(value);
        return this;
    }

    @Override
    @NotNull
    public QuestionResponseRecord value2(@Nullable Long value) {
        setLinkId(value);
        return this;
    }

    @Override
    @NotNull
    public QuestionResponseRecord value3(@Nullable Boolean value) {
        setAnswered(value);
        return this;
    }

    @Override
    @NotNull
    public QuestionResponseRecord value4(@Nullable Long value) {
        setAnswerCount(value);
        return this;
    }

    @Override
    @NotNull
    public QuestionResponseRecord value5(@NotNull OffsetDateTime value) {
        setLastActivityDate(value);
        return this;
    }

    @Override
    @NotNull
    public QuestionResponseRecord values(
        @NotNull Long value1,
        @Nullable Long value2,
        @Nullable Boolean value3,
        @Nullable Long value4,
        @NotNull OffsetDateTime value5
    ) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionResponseRecord
     */
    public QuestionResponseRecord() {
        super(QuestionResponse.QUESTION_RESPONSE);
    }

    /**
     * Create a detached, initialised QuestionResponseRecord
     */
    @ConstructorProperties({"questionId", "linkId", "answered", "answerCount", "lastActivityDate"})
    public QuestionResponseRecord(
        @NotNull Long questionId,
        @Nullable Long linkId,
        @Nullable Boolean answered,
        @Nullable Long answerCount,
        @NotNull OffsetDateTime lastActivityDate
    ) {
        super(QuestionResponse.QUESTION_RESPONSE);

        setQuestionId(questionId);
        setLinkId(linkId);
        setAnswered(answered);
        setAnswerCount(answerCount);
        setLastActivityDate(lastActivityDate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised QuestionResponseRecord
     */
    public QuestionResponseRecord(edu.java.scrapper.domain.repositories.jooq.generated.tables.pojos.QuestionResponse value) {
        super(QuestionResponse.QUESTION_RESPONSE);

        if (value != null) {
            setQuestionId(value.getQuestionId());
            setLinkId(value.getLinkId());
            setAnswered(value.getAnswered());
            setAnswerCount(value.getAnswerCount());
            setLastActivityDate(value.getLastActivityDate());
            resetChangedOnNotNull();
        }
    }
}
