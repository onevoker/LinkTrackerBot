app:
  scheduler:
    enable: true
    interval: 14s
    force-check-delay: 20s
  database-access-type: jooq

  rate-limiting-settings:
    count: 4
    tokens: 4
    period: 10s

  swagger-endpoints:
    swagger: /swagger-ui
    api-docs: /v3/api-docs

  kafka:
    bootstrap-servers: localhost:9092
    topic-name: updates

  use-queue: false

  custom-metrics:
    messages-processed:
      name: messages-processed
      description: count processed messages
      tag: application

resources:
  bot:
    base-url: http://localhost:8090

    retry-settings:
      backOffType: constant
      retryCount: 2
      step: 2s
      httpStatuses: INTERNAL_SERVER_ERROR, BAD_GATEWAY, INSUFFICIENT_STORAGE, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT, TOO_MANY_REQUESTS

  stack-overflow:
    urls:
      api: https://api.stackexchange.com/2.3/questions/
      domain: stackoverflow.com

    regexps:
      regexp-for-question-id: https://stackoverflow\.com/questions/(\d+)/([\w-]+)

    retry-settings:
      backOffType: exponential
      retryCount: 8
      step: 6s
      httpStatuses: INTERNAL_SERVER_ERROR, BAD_GATEWAY, INSUFFICIENT_STORAGE, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT, TOO_MANY_REQUESTS

  git-hub:
    urls:
      api: https://api.github.com/repos/
      domain: github.com
    response-timeout: 15

    authorization:
      header-name: onevoker
      authorization-token: ${access-token}

    regexps:
      regexp-for-git-hub-owner: https://github\.com/(.*?)/
      regexp-for-git-hub-repo: https://github\.com/.*?/(.*)

    retry-settings:
      backOffType: linear
      retryCount: 3
      step: 10s
      httpStatuses: INTERNAL_SERVER_ERROR, BAD_GATEWAY, INSUFFICIENT_STORAGE, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT, TOO_MANY_REQUESTS

spring:
  liquibase:
    enabled: false
  application:
    name: scrapper
  datasource:
    driver_class_name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/scrapper
    username: postgres
    password: postgres

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: /swagger-ui

management:
  server:
    port: 8081
  endpoints:
    web:
      base-path: /
      exposure:
        include: info, health, prometheus
      path-mapping:
        prometheus: /metrics
  metrics:
    tags:
      application: ${spring.application.name}
